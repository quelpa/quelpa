# * test.yml --- Test Emacs packages using makem.sh on GitHub Actions

# URL: https://github.com/alphapapa/makem.sh
# Version: 0.5

# * Commentary:

# Based on Steve Purcell's examples at
# <https://github.com/purcell/setup-emacs/blob/master/.github/workflows/test.yml>,
# <https://github.com/purcell/package-lint/blob/master/.github/workflows/test.yml>.

# * License:

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# * Code:

name: "CI"
on:
  pull_request:
  push:
    # Comment out this section to enable testing of all branches.
    # branches:
    #   - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        emacs-version:
          - 27.2
          - 28.2
          - 29.3
        experimental: [false]
        include:
          - os: ubuntu-latest
            emacs-version: snapshot
            experimental: true
          - os: macos-latest
            emacs-version: snapshot
            experimental: true
          - os: windows-latest
            emacs-version: snapshot
            experimental: true
        exclude:
          - os: macos-latest
            emacs-version: 27.2

    steps:
    - uses: jcs090218/setup-emacs@master
      with:
        version: ${{ matrix.emacs-version }}

    - uses: emacs-eask/setup-eask@master
      with:
        version: 'snapshot'

    - uses: actions/checkout@v3

    - name: Install bzr
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install bzr subversion

    # The "all" rule is not used, because it treats compilation warnings
    # as failures, so linting and testing are run as separate steps.

    - name: Compile
      run: eask compile

    - name: Lint
      # NOTE: Uncomment this line to treat lint failures as passing
      #       so the job doesn't show failure.
      continue-on-error: true
      run: |
        eask lint checkdoc
        eask lint package

    - name: Test
      if: matrix.os == 'ubuntu-latest'
      run: eask test ert ./test/quelpa-test.el

# Local Variables:
# eval: (outline-minor-mode)
# End:
